<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnEntrar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gMa/APB7fFIQoQLRAAAAAElFTkSuQmCC
</value>
  </data>
</root>